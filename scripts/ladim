#! /usr/bin/env python

import sys
# from netCDF4 import num2date

from ladim.configuration import Configure
from ladim.gridforce import Grid, Forcing
from ladim.release import ParticleReleaser
from ladim.state import State
from ladim.output import OutPut

# ==================
# Initiate the model
# ==================

# --- Configuration ---
if len(sys.argv) > 1:   # configuration file from command line
    config_file = sys.argv[1]
else:
    config_file = 'ladim.yaml'
config = Configure(config_file)

# --- Initiate the grid and the forcing ---
grid = Grid(config)
forcing = Forcing(config, grid)

# --- Initiate particle releaser ---
releaser = ParticleReleaser(config)

#  --- Initiate the model state ---
state = State(config)

# --- Initiate the output ---
out = OutPut(config, releaser)
# out.write_particle_variables(releaser)

# ==============
# Main time loop
# ==============

print("============ starting time loop")
for step in range(config.numsteps+1):

    # --- Update forcing ---
    forcing.update(step)

    # --- Particle release ---
    if step in releaser.steps:
        V = next(releaser)
        state.append(V)

    # --- Save to file ---
    # Output before update???
    # Have an optional initial output
    if step % config.output_period == 0:
        out.write(state)

    # --- Update the model state ---
    state.update(grid, forcing)

# ========
# Clean up
# ========

print('\nLADiM: end of simulation')

forcing.close()
out.close()
